<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Moving average period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
        <calculation class='tableau' formula='&quot;day&quot;' />
        <members>
          <member value='&quot;day&quot;' />
          <member value='&quot;week&quot;' />
          <member value='&quot;month&quot;' />
        </members>
      </column>
      <column caption='moving average duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
        <calculation class='tableau' formula='50' />
      </column>
    </datasource>
    <datasource caption='Data (london_bikes_final)' inline='true' name='federated.1fv569x04l965315e2vfu1gmtkjo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='london_bikes_final' name='excel-direct.1gcu62m0hkw0qf19wlofj0emnq0f'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/hands/Desktop/jupyter/london_bikes_final.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1gcu62m0hkw0qf19wlofj0emnq0f' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temp_real_C' ordinal='3' />
            <column datatype='real' name='temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1gcu62m0hkw0qf19wlofj0emnq0f' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temp_real_C' ordinal='3' />
            <column datatype='real' name='temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K17415:no:A1:K17415:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_real_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_real_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>temp_real_C</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_feels_like_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_feels_like_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>temp_feels_like_C</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity_percent]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>humidity_percent</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed_kph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed_kph]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>wind_speed_kph</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_holiday</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='moving average rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='moving average period' datatype='date' datatype-customized='true' name='[Calculation_1661828327306522625]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE((DATETRUNC([Parameters].[Parameter 1],[time])))' />
      </column>
      <column caption='min month' datatype='date' name='[Calculation_1661828327308599298]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{MIN(IF [moving average period Set]THEN[Calculation_1661828327306522625] END)}' />
      </column>
      <column caption='in range' datatype='boolean' name='[Calculation_1661828327325773829]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1661828327306522625] &gt;= [Calculation_1661828327308599298] &#13;&#10;AND &#13;&#10;[Calculation_1661828327306522625]&lt;= [min month (copy)_1661828327309262851]' />
      </column>
      <column caption='in range rides' datatype='integer' name='[Calculation_1661828327333216262]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{SUM(INT([Calculation_1661828327325773829])*[count])}' />
      </column>
      <column caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_8462B5D847764B7FA80F6781E8BCF3EE]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Humidity Percent' datatype='real' name='[humidity_percent]' role='measure' type='quantitative' />
      <column caption='Is Holiday' datatype='integer' name='[is_holiday]' role='measure' type='quantitative' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column caption='max month ' datatype='date' name='[min month (copy)_1661828327309262851]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{MAX(IF [moving average period Set]THEN[Calculation_1661828327306522625] END)}' />
      </column>
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Temp c' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
      </column>
      <column caption='temp feels like C' datatype='real' name='[temp_feels_like_C]' role='measure' type='quantitative' />
      <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1661828327325773829]' derivation='Attribute' name='[attr:Calculation_1661828327325773829:nk]' pivot='key' type='nominal' />
      <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
      <group caption='Tooltip (min month,Wind kph,max month ,Temp c)' hidden='true' name='[Tooltip (min month,Wind kph,max month ,Temp c)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1661828327308599298]' />
          <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
          <groupfilter function='level-members' level='[min month (copy)_1661828327309262851]' />
          <groupfilter function='level-members' level='[temp real C (bin)]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (moving average period,min month,max month )' hidden='true' name='[Tooltip (moving average period,min month,max month )]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1661828327306522625]' />
          <groupfilter function='level-members' level='[Calculation_1661828327308599298]' />
          <groupfilter function='level-members' level='[min month (copy)_1661828327309262851]' />
        </groupfilter>
      </group>
      <group caption='moving average period Set' name='[moving average period Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='#2015-01-04#' function='range' level='[Calculation_1661828327306522625]' to='#2015-10-08#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Calculation_1661828327325773829:nk]' type='palette'>
            <map to='#0a611b'>
              <bucket>true</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:time:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:weather:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Broken clouds&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rain with thunderstorm&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Rain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowfall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cloudy&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Scattered clouds&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clear&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving average period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
        </column>
        <column caption='moving average duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
          <calculation class='tableau' formula='50' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_8462B5D847764B7FA80F6781E8BCF3EE'>
            <properties context=''>
              <relation connection='excel-direct.1gcu62m0hkw0qf19wlofj0emnq0f' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                  <column datatype='real' name='temp_real_C' ordinal='3' />
                  <column datatype='real' name='temp_feels_like_C' ordinal='4' />
                  <column datatype='real' name='humidity_percent' ordinal='5' />
                  <column datatype='real' name='wind_speed_kph' ordinal='6' />
                  <column datatype='string' name='weather' ordinal='7' />
                  <column datatype='integer' name='is_holiday' ordinal='8' />
                  <column datatype='integer' name='is_weekend' ordinal='9' />
                  <column datatype='string' name='season' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <edit-group-action caption='update moving average period set' name='[Action1_D136115CD6BC467DAECFB17531CE3BE2]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='MovingAverage' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='do-nothing' />
        <param name='target-group' value='[federated.1fv569x04l965315e2vfu1gmtkjo].[moving average period Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='HeatMap'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#0a611b'>Temperature vs wind speed</run>
            <run bold='true' fontcolor='#0a611b' fontsize='14'>Æ </run>
            <run bold='true' fontcolor='#0a611b' fontsize='10'><![CDATA[between <[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327308599298:qk]> and <[federated.1fv569x04l965315e2vfu1gmtkjo].[none:min month (copy)_1661828327309262851:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1fv569x04l965315e2vfu1gmtkjo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving average period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fv569x04l965315e2vfu1gmtkjo'>
            <column caption='moving average period' datatype='date' datatype-customized='true' name='[Calculation_1661828327306522625]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE((DATETRUNC([Parameters].[Parameter 1],[time])))' />
            </column>
            <column caption='min month' datatype='date' name='[Calculation_1661828327308599298]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MIN(IF [moving average period Set]THEN[Calculation_1661828327306522625] END)}' />
            </column>
            <column caption='in range' datatype='boolean' name='[Calculation_1661828327325773829]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1661828327306522625] &gt;= [Calculation_1661828327308599298] &#13;&#10;AND &#13;&#10;[Calculation_1661828327306522625]&lt;= [min month (copy)_1661828327309262851]' />
            </column>
            <column caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column caption='max month ' datatype='date' name='[min month (copy)_1661828327309262851]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [moving average period Set]THEN[Calculation_1661828327306522625] END)}' />
            </column>
            <column-instance column='[Calculation_1661828327308599298]' derivation='None' name='[none:Calculation_1661828327308599298:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1661828327325773829]' derivation='None' name='[none:Calculation_1661828327325773829:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wind Speed Kph (bin)]' derivation='None' name='[none:Wind Speed Kph (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[min month (copy)_1661828327309262851]' derivation='None' name='[none:min month (copy)_1661828327309262851:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp real C (bin)]' derivation='None' name='[none:temp real C (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Temp c' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327325773829:nk]'>
            <groupfilter function='member' level='[none:Calculation_1661828327325773829:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327325773829:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Wind Speed Kph (bin):ok]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:temp real C (bin):ok]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5dce4</color>
                <color>#d9c9d8</color>
                <color>#cdb6cc</color>
                <color>#c2a4c0</color>
                <color>#b693b4</color>
                <color>#aa83a8</color>
                <color>#9f749c</color>
                <color>#936690</color>
                <color>#875984</color>
                <color>#7c4d79</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline6' value='on' />
            <format attr='line-pattern-only' id='refline6' value='dotted' />
            <format attr='line-visibility' id='refline8' value='on' />
            <format attr='line-pattern-only' id='refline8' value='dotted' />
            <format attr='line-visibility' id='refline10' value='on' />
            <format attr='line-pattern-only' id='refline10' value='dotted' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='stroke-color' id='refline6' value='#0a611b' />
            <format attr='fill-color' id='refline6' value='#e8edda' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]' />
              <text column='[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]' />
              <lod column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:min month (copy)_1661828327309262851:qk]' />
              <lod column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327308599298:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#0a611b'><![CDATA[Temp c:	<[federated.1fv569x04l965315e2vfu1gmtkjo].[none:temp real C (bin):ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#0a611b'><![CDATA[Wind kph:	<[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Wind Speed Kph (bin):ok]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#0a611b'><![CDATA[<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#0a611b'><![CDATA[<Sheet name="Hour" maxwidth="300" maxheight="600" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:temp real C (bin):ok]</rows>
        <cols>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Wind Speed Kph (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1fv569x04l965315e2vfu1gmtkjo].[Wind Speed Kph (bin)]</column>
          <column>[federated.1fv569x04l965315e2vfu1gmtkjo].[temp real C (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{D74CF56E-BDF0-4852-853C-F9E2E8498A63}' />
    </worksheet>
    <worksheet name='Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1fv569x04l965315e2vfu1gmtkjo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving average period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fv569x04l965315e2vfu1gmtkjo'>
            <column caption='moving average period' datatype='date' datatype-customized='true' name='[Calculation_1661828327306522625]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE((DATETRUNC([Parameters].[Parameter 1],[time])))' />
            </column>
            <column caption='min month' datatype='date' name='[Calculation_1661828327308599298]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MIN(IF [moving average period Set]THEN[Calculation_1661828327306522625] END)}' />
            </column>
            <column caption='in range' datatype='boolean' name='[Calculation_1661828327325773829]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1661828327306522625] &gt;= [Calculation_1661828327308599298] &#13;&#10;AND &#13;&#10;[Calculation_1661828327306522625]&lt;= [min month (copy)_1661828327309262851]' />
            </column>
            <column caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column caption='max month ' datatype='date' name='[min month (copy)_1661828327309262851]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [moving average period Set]THEN[Calculation_1661828327306522625] END)}' />
            </column>
            <column-instance column='[Calculation_1661828327308599298]' derivation='None' name='[none:Calculation_1661828327308599298:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1661828327325773829]' derivation='None' name='[none:Calculation_1661828327325773829:nk]' pivot='key' type='nominal' />
            <column-instance column='[min month (copy)_1661828327309262851]' derivation='None' name='[none:min month (copy)_1661828327309262851:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Temp c' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fv569x04l965315e2vfu1gmtkjo].[Tooltip (min month,Wind kph,max month ,Temp c)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1661828327308599298]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[min month (copy)_1661828327309262851]' />
              <groupfilter function='level-members' level='[temp real C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fv569x04l965315e2vfu1gmtkjo].[Tooltip (moving average period,min month,max month )]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1661828327306522625]' />
              <groupfilter function='level-members' level='[Calculation_1661828327308599298]' />
              <groupfilter function='level-members' level='[min month (copy)_1661828327309262851]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327325773829:nk]'>
            <groupfilter function='member' level='[none:Calculation_1661828327325773829:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327325773829:nk]</column>
            <column>[federated.1fv569x04l965315e2vfu1gmtkjo].[Tooltip (moving average period,min month,max month )]</column>
            <column>[federated.1fv569x04l965315e2vfu1gmtkjo].[Tooltip (min month,Wind kph,max month ,Temp c)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline6' value='on' />
            <format attr='line-pattern-only' id='refline6' value='dotted' />
            <format attr='line-visibility' id='refline8' value='on' />
            <format attr='line-pattern-only' id='refline8' value='dotted' />
            <format attr='line-visibility' id='refline10' value='on' />
            <format attr='line-pattern-only' id='refline10' value='dotted' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='stroke-color' id='refline6' value='#0a611b' />
            <format attr='fill-color' id='refline6' value='#e8edda' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1fv569x04l965315e2vfu1gmtkjo].[hr:time:ok]' />
              <text column='[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]' />
              <lod column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327308599298:qk]' />
              <lod column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:min month (copy)_1661828327309262851:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fv569x04l965315e2vfu1gmtkjo].[hr:time:ok]</rows>
        <cols>[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{70282D28-5A82-47DB-B7B4-9B96A1A4101C}' />
    </worksheet>
    <worksheet name='MovingAverage'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#0a611b' fontsize='14'><![CDATA[<[Parameters].[Parameter 2]> <[Parameters].[Parameter 1]> Moving Average]]></run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1fv569x04l965315e2vfu1gmtkjo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving average period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
            <column caption='moving average duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
              <calculation class='tableau' formula='50' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fv569x04l965315e2vfu1gmtkjo'>
            <column caption='moving average rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='moving average period' datatype='date' datatype-customized='true' name='[Calculation_1661828327306522625]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE((DATETRUNC([Parameters].[Parameter 1],[time])))' />
            </column>
            <column caption='min month' datatype='date' name='[Calculation_1661828327308599298]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MIN(IF [moving average period Set]THEN[Calculation_1661828327306522625] END)}' />
            </column>
            <column caption='in range' datatype='boolean' name='[Calculation_1661828327325773829]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1661828327306522625] &gt;= [Calculation_1661828327308599298] &#13;&#10;AND &#13;&#10;[Calculation_1661828327306522625]&lt;= [min month (copy)_1661828327309262851]' />
            </column>
            <column-instance column='[Calculation_1661828327325773829]' derivation='Attribute' name='[attr:Calculation_1661828327325773829:nk]' pivot='key' type='nominal' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column caption='max month ' datatype='date' name='[min month (copy)_1661828327309262851]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [moving average period Set]THEN[Calculation_1661828327306522625] END)}' />
            </column>
            <column-instance column='[Calculation_1661828327306522625]' derivation='None' name='[none:Calculation_1661828327306522625:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1661828327308599298]' derivation='None' name='[none:Calculation_1661828327308599298:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min month (copy)_1661828327309262851]' derivation='None' name='[none:min month (copy)_1661828327309262851:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327306522625:qk]' included-values='all' />
          <slices>
            <column>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327306522625:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fv569x04l965315e2vfu1gmtkjo].[usr:Calculation1:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327306522625:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline6' value='on' />
            <format attr='line-pattern-only' id='refline6' value='dotted' />
            <format attr='line-visibility' id='refline8' value='on' />
            <format attr='line-pattern-only' id='refline8' value='dotted' />
            <format attr='line-visibility' id='refline10' value='on' />
            <format attr='line-pattern-only' id='refline10' value='dotted' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='stroke-color' id='refline6' value='#0a611b' />
            <format attr='fill-color' id='refline6' value='#e8edda' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#0a611b' />
            <format attr='font-weight' value='bold' />
            <format attr='border-style' value='dotted' />
            <format attr='border-color' value='#0a611b' />
            <format attr='title' field='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327306522625:qk]' value='Moving Average Period'>
              <formatted-text>
                <run>Moving Average Period</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#0a611b' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fv569x04l965315e2vfu1gmtkjo].[attr:Calculation_1661828327325773829:nk]' />
              <lod column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:min month (copy)_1661828327309262851:qk]' />
              <lod column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327308599298:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327306522625:qk]' enable-instant-analytics='false' formula='min' id='refline6' label-type='none' paired-id='refline7' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327308599298:qk]' z-order='7' />
            <reference-line axis-column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327306522625:qk]' enable-instant-analytics='false' formula='max' id='refline7' label-type='none' paired-id='refline6' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:min month (copy)_1661828327309262851:qk]' z-order='8' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#0a611b'><![CDATA[Date:	<[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327306522625:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#0a611b'><![CDATA[moving average rides:	<[federated.1fv569x04l965315e2vfu1gmtkjo].[usr:Calculation1:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#0a611b'><![CDATA[<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#0a611b'><![CDATA[<Sheet name="Hour" maxwidth="300" maxheight="600" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fv569x04l965315e2vfu1gmtkjo].[usr:Calculation1:qk]</rows>
        <cols>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327306522625:qk]</cols>
      </table>
      <simple-id uuid='{255CD017-AF7E-4A4C-97AE-E856D98EF82A}' />
    </worksheet>
    <worksheet name='TotalRides'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#0a611b'>London Bikes Rides</run>
            <run>Æ&#10;</run>
            <run fontcolor='#0a611b' fontsize='10'><![CDATA[between <[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327308599298:qk]> and <[federated.1fv569x04l965315e2vfu1gmtkjo].[none:min month (copy)_1661828327309262851:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1fv569x04l965315e2vfu1gmtkjo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving average period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fv569x04l965315e2vfu1gmtkjo'>
            <column caption='moving average period' datatype='date' datatype-customized='true' name='[Calculation_1661828327306522625]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE((DATETRUNC([Parameters].[Parameter 1],[time])))' />
            </column>
            <column caption='min month' datatype='date' name='[Calculation_1661828327308599298]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MIN(IF [moving average period Set]THEN[Calculation_1661828327306522625] END)}' />
            </column>
            <column caption='in range' datatype='boolean' name='[Calculation_1661828327325773829]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1661828327306522625] &gt;= [Calculation_1661828327308599298] &#13;&#10;AND &#13;&#10;[Calculation_1661828327306522625]&lt;= [min month (copy)_1661828327309262851]' />
            </column>
            <column caption='in range rides' datatype='integer' name='[Calculation_1661828327333216262]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{SUM(INT([Calculation_1661828327325773829])*[count])}' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column caption='max month ' datatype='date' name='[min month (copy)_1661828327309262851]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [moving average period Set]THEN[Calculation_1661828327306522625] END)}' />
            </column>
            <column-instance column='[Calculation_1661828327308599298]' derivation='None' name='[none:Calculation_1661828327308599298:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1661828327325773829]' derivation='None' name='[none:Calculation_1661828327325773829:nk]' pivot='key' type='nominal' />
            <column-instance column='[min month (copy)_1661828327309262851]' derivation='None' name='[none:min month (copy)_1661828327309262851:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1661828327333216262]' derivation='Sum' name='[sum:Calculation_1661828327333216262:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327325773829:nk]'>
            <groupfilter function='member' level='[none:Calculation_1661828327325773829:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327325773829:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline6' value='on' />
            <format attr='line-pattern-only' id='refline6' value='dotted' />
            <format attr='line-visibility' id='refline8' value='on' />
            <format attr='line-pattern-only' id='refline8' value='dotted' />
            <format attr='line-visibility' id='refline10' value='on' />
            <format attr='line-pattern-only' id='refline10' value='dotted' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='stroke-color' id='refline6' value='#0a611b' />
            <format attr='fill-color' id='refline6' value='#e8edda' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:Calculation_1661828327333216262:qk]' />
              <lod column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:min month (copy)_1661828327309262851:qk]' />
              <lod column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327308599298:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#0a611b' fontsize='36'>&lt;</run>
                <run bold='true' fontcolor='#0a611b' fontsize='36'>[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:Calculation_1661828327333216262:qk]</run>
                <run bold='true' fontcolor='#0a611b' fontsize='36'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{44B397E4-5FB6-4ECF-A4AC-9CAC220C4C8A}' />
    </worksheet>
    <worksheet name='Weather'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1fv569x04l965315e2vfu1gmtkjo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving average period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fv569x04l965315e2vfu1gmtkjo'>
            <column caption='moving average period' datatype='date' datatype-customized='true' name='[Calculation_1661828327306522625]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE((DATETRUNC([Parameters].[Parameter 1],[time])))' />
            </column>
            <column caption='min month' datatype='date' name='[Calculation_1661828327308599298]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MIN(IF [moving average period Set]THEN[Calculation_1661828327306522625] END)}' />
            </column>
            <column caption='in range' datatype='boolean' name='[Calculation_1661828327325773829]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1661828327306522625] &gt;= [Calculation_1661828327308599298] &#13;&#10;AND &#13;&#10;[Calculation_1661828327306522625]&lt;= [min month (copy)_1661828327309262851]' />
            </column>
            <column caption='Wind kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column caption='max month ' datatype='date' name='[min month (copy)_1661828327309262851]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX(IF [moving average period Set]THEN[Calculation_1661828327306522625] END)}' />
            </column>
            <column-instance column='[Calculation_1661828327308599298]' derivation='None' name='[none:Calculation_1661828327308599298:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1661828327325773829]' derivation='None' name='[none:Calculation_1661828327325773829:nk]' pivot='key' type='nominal' />
            <column-instance column='[min month (copy)_1661828327309262851]' derivation='None' name='[none:min month (copy)_1661828327309262851:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Temp c' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.44' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fv569x04l965315e2vfu1gmtkjo].[Tooltip (min month,Wind kph,max month ,Temp c)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1661828327308599298]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[min month (copy)_1661828327309262851]' />
              <groupfilter function='level-members' level='[temp real C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fv569x04l965315e2vfu1gmtkjo].[Tooltip (moving average period,min month,max month )]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1661828327306522625]' />
              <groupfilter function='level-members' level='[Calculation_1661828327308599298]' />
              <groupfilter function='level-members' level='[min month (copy)_1661828327309262851]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327325773829:nk]'>
            <groupfilter function='member' level='[none:Calculation_1661828327325773829:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:weather:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327325773829:nk]</column>
            <column>[federated.1fv569x04l965315e2vfu1gmtkjo].[Tooltip (moving average period,min month,max month )]</column>
            <column>[federated.1fv569x04l965315e2vfu1gmtkjo].[Tooltip (min month,Wind kph,max month ,Temp c)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline6' value='on' />
            <format attr='line-pattern-only' id='refline6' value='dotted' />
            <format attr='line-visibility' id='refline8' value='on' />
            <format attr='line-pattern-only' id='refline8' value='dotted' />
            <format attr='line-visibility' id='refline10' value='on' />
            <format attr='line-pattern-only' id='refline10' value='dotted' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='stroke-color' id='refline6' value='#0a611b' />
            <format attr='fill-color' id='refline6' value='#e8edda' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:weather:nk]' />
              <text column='[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]' />
              <lod column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:min month (copy)_1661828327309262851:qk]' />
              <lod column='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327308599298:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fv569x04l965315e2vfu1gmtkjo].[sum:count:qk]</rows>
        <cols>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:weather:nk]</cols>
      </table>
      <simple-id uuid='{F0448EC6-8260-4ED7-814A-86C2A83CA417}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#0a611b' />
          <format attr='font-weight' value='bold' />
          <format attr='border-style' value='dotted' />
          <format attr='border-color' value='#0a611b' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#0a611b' />
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Data (london_bikes_final)' name='federated.1fv569x04l965315e2vfu1gmtkjo' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving average period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
          <members>
            <member value='&quot;day&quot;' />
            <member value='&quot;week&quot;' />
            <member value='&quot;month&quot;' />
          </members>
        </column>
        <column caption='moving average duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
          <calculation class='tableau' formula='50' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1fv569x04l965315e2vfu1gmtkjo'>
        <column caption='moving average period' datatype='date' datatype-customized='true' name='[Calculation_1661828327306522625]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATE((DATETRUNC([Parameters].[Parameter 1],[time])))' />
        </column>
        <column-instance column='[Calculation_1661828327306522625]' derivation='None' name='[none:Calculation_1661828327306522625:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='18' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='11' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
              <zone h='97916' id='8' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='97916' id='6' type-v2='layout-basic' w='98828' x='586' y='1042'>
                  <zone h='42317' id='3' name='TotalRides' w='27525' x='586' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='55599' id='15' name='HeatMap' w='98828' x='586' y='43359'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42317' id='14' name='MovingAverage' w='71303' x='28111' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='7422' id='12' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='14568' x='57247' y='391'>
          <formatted-text>
            <run>Moving Average Duration</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='7682' id='13' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13909' x='72474' y='260'>
          <formatted-text>
            <run>Moving Average Period</run>
          </formatted-text>
        </zone>
        <zone h='9245' id='19' name='MovingAverage' param='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327306522625:qk]' type-v2='filter' values='database' w='12811' x='86750' y='0' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='36' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone custom-title='true' h='7682' id='13' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13909' x='72474' y='260'>
                  <formatted-text>
                    <run>Moving Average Period</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='7422' id='12' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='14568' x='57247' y='391'>
                  <formatted-text>
                    <run>Moving Average Duration</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42317' id='3' is-fixed='true' name='TotalRides' w='27525' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9245' id='19' name='MovingAverage' param='[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327306522625:qk]' type-v2='filter' values='database' w='12811' x='86750' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42317' id='14' is-fixed='true' name='MovingAverage' w='71303' x='28111' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55599' id='15' is-fixed='true' name='HeatMap' w='98828' x='586' y='43359'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{99A28E63-E868-47E7-A4FA-A30EF9AE5456}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='MovingAverage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[attr:Calculation_1661828327325773829:nk]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[io:moving average period Set:nk]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327306522625:qk]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327314489348:qk]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[tmn:min month (copy)_1661828327309262851:qk]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[yr:Calculation_1661828327306522625:ok]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[yr:Calculation_1661828327308599298:ok]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[yr:min month (copy)_1661828327309262851:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B452D336-BA3D-454E-AB16-FA23D4A2CE6F}' />
    </window>
    <window class='worksheet' name='TotalRides'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327325773829:nk]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[yr:Calculation_1661828327308599298:ok]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[yr:min month (copy)_1661828327309262851:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E08DCD15-79A9-49A1-ACB6-6B25AC08B34A}' />
    </window>
    <window class='worksheet' name='HeatMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327325773829:nk]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Wind Speed Kph (bin):ok]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:temp real C (bin):ok]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[yr:Calculation_1661828327308599298:ok]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[yr:min month (copy)_1661828327309262851:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02976965-4EFC-4D84-83F1-C170CD0CD765}' />
    </window>
    <window class='worksheet' name='Weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327325773829:nk]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:weather:nk]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[yr:Calculation_1661828327308599298:ok]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[yr:min month (copy)_1661828327309262851:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{144117D7-04AA-4C18-80E3-7DF865E71EE5}' />
    </window>
    <window class='worksheet' name='Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[hr:time:ok]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[none:Calculation_1661828327325773829:nk]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[yr:Calculation_1661828327308599298:ok]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[yr:min month (copy)_1661828327309262851:ok]</field>
            <field>[federated.1fv569x04l965315e2vfu1gmtkjo].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{226CAC2C-A8C5-4860-B020-4CFABDFA40F3}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='HeatMap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MovingAverage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TotalRides' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6841B0BE-54A7-4876-BB44-0FF7E30DF6D3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HeatMap' width='192'>
      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
      B1C41vwnwMb2FyU/tUsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hour' width='192'>
      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
      D3YtP3cDrYOJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='MovingAverage' width='192'>
      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
    </thumbnail>
    <thumbnail height='86' name='TotalRides' width='192'>
      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
      10gBSOya/wFwnstthrhylAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Weather' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
